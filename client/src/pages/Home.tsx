import {useEffect, useState} from "react";
import {FormField, Loader} from "../components";
import Card from "../components/Card.tsx";
import Header from "../components/Header.tsx";
import {PostType} from "../../types.ts";
import useDebounce from "../utils";

const Home = () => {
	const [loading, setLoading] = useState(false);
	const [allPosts, setAllPosts] = useState<PostType[]>([]);
	const [searchText, setSearchText] = useState('');
	const [searchResults, setSearchResults] = useState<PostType[]>([]);

	const debouncedValue = useDebounce(searchText, 500);

	useEffect(() => {
		const results = allPosts.filter((item) => item.name.toLowerCase().includes(debouncedValue.toLowerCase()) || item.prompt.toLowerCase().includes(debouncedValue.toLowerCase()))

		setSearchResults(results);
	}, [debouncedValue, allPosts]);

	useEffect(() => {
		async function getPost() {
			try {
				setLoading(true);
				const response = await fetch('https://dall-e-clone-m7sf.onrender.com/api/v1/post', {
					method: 'GET',
					headers: {
						'Content-Type': 'application/json'
					}
				})

				if (response.ok) {
					const result = await response.json();

					setAllPosts(result.data.reverse())
				}
			} catch (e) {
				alert(e);
			} finally {
				setLoading(false)
			}
		}

		getPost();
	}, []);

	const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {
		setSearchText(e.target.value)
	}

	const renderSectionCard = (data: PostType[], title: string) => {
		if (data?.length > 0) {
			return (
				data.map((post) => <Card key={post._id} {...post} />)
			);
		}

		return (
			<h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
		);
	}


	return (
		<>
			<Header
				title="The Community Showcase"
				subtitle="Browse through a collection of imaginative and visually stunning images generated by DALL-E AI"/>

			<div className="mt-16">
				<FormField
					labelName="Search posts"
					type="text"
					name="text"
					placeholder="Search something..."
					value={searchText}
					onChange={handleSearch}
				/>
			</div>

			<div className="mt-10">
				{loading ? (
					<div className="flex justify-center items-center">
						<Loader/>
					</div>
				) : (
					<>
						{searchText && (
							<h2 className="font-medium text-[#666e75] text-xl mb-3">
								Showing results for <span className="text-[#222328]">
								{searchText}
							</span>
							</h2>
						)}
						<div className="grid lg:grid-cols-4 sm:grid-cols-3
							xs:grid-cols-2 grid-cols-1 gap-3">
							{searchText ? renderSectionCard(searchResults, "No search results found")
								: renderSectionCard(allPosts, "No posts found")}
						</div>
					</>
				)}
			</div>
		</>
	)
}

export default Home
